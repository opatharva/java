slip-7
Q1
import java.util.Random;

public class MultiThreadedApp {
    public static void main(String[] args) {
        RandomNumberGenerator rng = new RandomNumberGenerator();
        SquareCalculator sc = new SquareCalculator();
        CubeCalculator cc = new CubeCalculator();

        rng.start();
        sc.start();
        cc.start();
    }
}

class RandomNumberGenerator extends Thread {
    @Override
    public void run() {
        while (true) {
            try {
                Thread.sleep(1000);
                Random rand = new Random();
                int number = rand.nextInt(100);
                System.out.println("Generated number: " + number);
                synchronized (this) {
                    notifyAll();
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

class SquareCalculator extends Thread {
    @Override
    public void run() {
        while (true) {
            synchronized (RandomNumberGenerator.class) {
                try {
                    RandomNumberGenerator.class.wait();
                    int number = RandomNumberGenerator.class.getGeneratedNumber();
                    if (number % 2 == 0) {
                        int square = number * number;
                        System.out.println("Square of " + number + " is " + square);
                    }
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}

class CubeCalculator extends Thread {
    @Override
    public void run() {
        while (true) {
            synchronized (RandomNumberGenerator.class) {
                try {
                    RandomNumberGenerator.class.wait();
                    int number = RandomNumberGenerator.class.getGeneratedNumber();
                    if (number % 2 != 0) {
                        int cube = number * number * number;
                        System.out.println("Cube of " + number + " is " + cube);
                    }
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}

class RandomNumberGenerator {
    private static volatile int generatedNumber;

    public static int getGeneratedNumber() {
        return generatedNumber;
    }

    public static void setGeneratedNumber(int generatedNumber) {
        RandomNumberGenerator.generatedNumber = generatedNumber;
    }
}


Q2
import java.sql.*;

public class ProductTable {
   public static void main(String[] args) throws Exception {
      // Step 1: Establish a connection to the database
      String url = "jdbc:mysql://localhost:3306/products_db";
      String username = "root";
      String password = "password";
      Connection conn = DriverManager.getConnection(url, username, password);
      
      // Step 2: Create a statement
      Statement stmt = conn.createStatement();
      
      // Step 3: Create a table
      String sqlCreate = "CREATE TABLE Product ("
            + "Pid INT NOT NULL,"
            + "Pname VARCHAR(45) NOT NULL,"
            + "Price FLOAT NOT NULL,"
            + "PRIMARY KEY (Pid))";
      stmt.executeUpdate(sqlCreate);
      System.out.println("Product table created.");
      
      // Step 4: Insert records into the table
      String sqlInsert1 = "INSERT INTO Product (Pid, Pname, Price)"
            + "VALUES (101, 'Product 1', 10.50)";
      String sqlInsert2 = "INSERT INTO Product (Pid, Pname, Price)"
            + "VALUES (102, 'Product 2', 15.75)";
      String sqlInsert3 = "INSERT INTO Product (Pid, Pname, Price)"
            + "VALUES (103, 'Product 3', 25.00)";
      String sqlInsert4 = "INSERT INTO Product (Pid, Pname, Price)"
            + "VALUES (104, 'Product 4', 5.99)";
      String sqlInsert5 = "INSERT INTO Product (Pid, Pname, Price)"
            + "VALUES (105, 'Product 5', 8.99)";
      stmt.executeUpdate(sqlInsert1);
      stmt.executeUpdate(sqlInsert2);
      stmt.executeUpdate(sqlInsert3);
      stmt.executeUpdate(sqlInsert4);
      stmt.executeUpdate(sqlInsert5);
      System.out.println("Records inserted into Product table.");
      
      // Step 5: Display all records in the table
      String sqlSelect = "SELECT * FROM Product";
      ResultSet rs = stmt.executeQuery(sqlSelect);
      
      while (rs.next()) {
         int pid = rs.getInt("Pid");
         String pname = rs.getString("Pname");
         float price = rs.getFloat("Price");
         System.out.println("Pid: " + pid + ", Pname: " + pname + ", Price: " + price);
      }
      
      // Step 6: Close the connection and statement objects
      rs.close();
      stmt.close();
      conn.close();
   }
}
